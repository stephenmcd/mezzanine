# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Mezzanine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-05-31 03:27+0400\n"
"PO-Revision-Date: 2012-05-05 23:20+0000\n"
"Last-Translator: Sebastián Ramírez Magrí <sebasmagri@gmail.com>\n"
"Language-Team: Russian (http://www.transifex.net/projects/p/mezzanine/"
"language/ru/)\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"

#: admin.py:38
msgid "Settings were successfully updated."
msgstr "Настройки успешно обновлены."

#: admin.py:42
msgid "Change"
msgstr "Изменить"

#: defaults.py:21
msgid "Minimum length for passwords"
msgstr ""

#: defaults.py:28
msgid "List of fields to exclude from the profile form."
msgstr ""

#: defaults.py:35
msgid "List of the User model fields to exclude from the update form."
msgstr ""

#: defaults.py:42
msgid "If ``True``, users will have their own public profile pages."
msgstr ""
"Если ``Да``, пользователи будут иметь свои собственные страницыс публичными "
"профилями."

#: defaults.py:50
msgid ""
"If ``True``, when users create an account, they will be sent an email with a "
"verification link, which they must click to enable their account."
msgstr ""

#: defaults.py:59
msgid "Controls the ordering and grouping of the admin menu."
msgstr "Порядок и группировка отображения элементов административного меню"

#: defaults.py:62
msgid "Content"
msgstr "Содержимое"

#: defaults.py:63
msgid "Media Library"
msgstr "Медиа-библиотека"

#: defaults.py:64
msgid "Site"
msgstr "Сайт"

#: defaults.py:65
msgid "Users"
msgstr "Пользователи"

#: defaults.py:71
msgid "Unregister these models from the admin."
msgstr "Убрать эти модели из центра администрирования."

#: defaults.py:78
msgid "bit.ly username"
msgstr "Логин на bit.ly"

#: defaults.py:79
msgid "Username for http://bit.ly URL shortening service."
msgstr "Имя пользователя на сервисе сокращения URL bit.ly"

#: defaults.py:86
msgid "bit.ly key"
msgstr "Ключ bit.ly"

#: defaults.py:87
msgid "Key for http://bit.ly URL shortening service."
msgstr "Ключ на сервисе сокращения URL bit.ly"

#: defaults.py:94
msgid "Enable featured images in blog posts"
msgstr "Включает изображение для заметок"

#: defaults.py:101
msgid "Use date URLs"
msgstr "Использовать адреса с датой"

#: defaults.py:102
msgid ""
"If ``True``, URLs for blog post include the month and year. Eg: /blog/yyyy/"
"mm/slug/"
msgstr ""
"Если ``Да``, адреса страниц блога будут содержать год и месяц: /blog/yyyy/mm/"
"slug/"

#: defaults.py:110
msgid "Blog posts per page"
msgstr "Количество заметок на странице"

#: defaults.py:111
msgid "Number of blog posts shown on a blog listing page."
msgstr "Количество заметок, отображаемых в списке на одной странице"

#: defaults.py:118
msgid "Slug of the page object for the blog."
msgstr "Внутренний URL главной страницы блога"

#: defaults.py:125
msgid ""
"Mezzanine's caching uses a technique know as mint caching. This is where the "
"requested expiry for a cache entry is stored with the cache entry in cache, "
"and the real expiry used has the ``CACHE_SET_DELAY`` added to it. Then on a "
"cache get, the store expiry is checked, and if it has past, the cache entry "
"is set again, and no entry is returned. This tries to ensure that cache "
"misses never occur, and if many clients were to get a cache miss at once, "
"only one would actually need to re-generated the cache entry."
msgstr ""

#: defaults.py:140
msgid "Accounts required for commenting"
msgstr "Комментарии требуют наличие аккаунта"

#: defaults.py:141
msgid "If ``True``, users must log in to comment."
msgstr ""
"Если ``Да``, то пользователи должны быть залогинены, чтобы иметь возможность "
"оставлять комментарии."

#: defaults.py:148
msgid "Akismet API Key"
msgstr ""

#: defaults.py:149
msgid ""
"Key for http://akismet.com spam filtering service. Used for filtering "
"comments and forms."
msgstr ""
"Ключ для сервиса фильтрации спама http://akismet.com. Для комментариев и "
"форм."

#: defaults.py:157
msgid "Disqus shortname"
msgstr "Логин на сервисе Disqus"

#: defaults.py:158
msgid "Shortname for the http://disqus.com comments service."
msgstr "Ваш логин на сервисе комментариев http://disqus.com"

#: defaults.py:165
msgid "Disqus public key"
msgstr "Публичный ключ Discus"

#: defaults.py:166
msgid "Public key for http://disqus.com developer API"
msgstr "Публичный ключ API Discus"

#: defaults.py:173
msgid "Disqus secret key"
msgstr "Секретный ключ Discus"

#: defaults.py:174
msgid "Secret key for http://disqus.com developer API"
msgstr "Секретный ключ API Discus"

#: defaults.py:181
msgid "Auto-approve comments"
msgstr "Автоподтверждение комментариев"

#: defaults.py:182
msgid "If ``True``, built-in comments are approved by default."
msgstr "Если ``Да``, то комментарии утверждаются автоматически"

#: defaults.py:189
msgid "Admin comments"
msgstr "Комментариев в админке"

#: defaults.py:190
msgid "Number of latest comments shown in the admin dashboard."
msgstr "Количество последних комментариев, отображаемых на панели в админке."

#: defaults.py:197
msgid "Show unapproved comments"
msgstr "Неподтверждённые комментарии"

#: defaults.py:198
msgid ""
"If ``True``, comments that have ``is_public`` unchecked will still be "
"displayed, but replaced with a ``waiting to be approved`` message."
msgstr ""
"Если ``Да``, то неопубликованные комментарии будут отображаться, но при этом "
"будут заменены на надпись ``ожидает подтверждения``"

#: defaults.py:207
msgid "Show removed comments"
msgstr "Удалённые комментарии"

#: defaults.py:208
msgid ""
"If ``True``, comments that have ``removed`` checked will still be displayed, "
"but replaced with a ``removed`` message."
msgstr ""
"Если ``Да``, то удалённые комментарии продолжат отображаться, но при этом "
"будут заменены на надпись ``Удалено``"

#: defaults.py:229
msgid ""
"A three item sequence, each containing a sequence of template tags used to "
"render the admin dashboard."
msgstr "3 колонки модулей, отображаемых на административной панели"

#: defaults.py:237
msgid "Device specific template sub-directory to use as the default device."
msgstr "Папка шаблона по умолчанию для мобильных устройств"

#: defaults.py:245
msgid ""
"Mapping of device specific template sub-directory names to the sequence of "
"strings that may be found in their user agents."
msgstr "Соответствие различных моделей мобильных устройств с шаблонами"

#: defaults.py:267
msgid ""
"A sequence of fields that will be injected into Mezzanine's (or any "
"library's) models. Each item in the sequence is a four item sequence. The "
"first two items are the dotted path to the model and its field name to be "
"added, and the dotted path to the field class to use for the field. The "
"third and fourth items are a sequence of positional args and a dictionary of "
"keyword args, to use when creating the field instance. When specifying the "
"field class, the path ``django.models.db.`` can be omitted for regular "
"Django model fields."
msgstr ""

#: defaults.py:282
msgid ""
"If ``True``, emails sent to extra recipients for form submissions won't be "
"sent from an address taken from one of the form's email fields."
msgstr ""

#: defaults.py:291
msgid "Max length allowed for field values in the forms app."
msgstr "Максимальная длина, допустимая для полей пользовательских форм"

#: defaults.py:298
msgid "Max length allowed for field labels in the forms app."
msgstr "Максимально допустимая длина названий полей пользовательских форм"

#: defaults.py:305
msgid "If ``True``, website forms will use HTML5 features."
msgstr ""
"Если ``Да``, то пользовательские формы будут использовать преимущества HTML5."

#: defaults.py:312
msgid "Char to use as a field delimiter when exporting form responses as CSV."
msgstr ""
"Символ, используемый как разделитель полей, при экспорте ответов на форму в "
"формате CSV"

#: defaults.py:320
msgid "Absolute path for storing file uploads for the forms app."
msgstr "Пусть для сохранения файлов, закачанных через пользовательские формы"

#: defaults.py:327
msgid "Google Analytics ID"
msgstr "Google Analytics ID"

#: defaults.py:329
msgid "Google Analytics ID (http://www.google.com/analytics/)"
msgstr "Google Analytics ID (http://www.google.com/analytics/)"

#: defaults.py:335
msgid ""
"A sequence mapping host names to themes, allowing different templates to be "
"served per HTTP hosts Each item in the sequence is a two item sequence, "
"containing a host such as ``othersite.example.com``, and the name of an "
"importable Python package for the theme. If the host is matched for a "
"request, the templates directory inside the theme package will be first "
"searched when loading templates."
msgstr ""

#: defaults.py:349
msgid "Name of the jQuery file."
msgstr ""

#: defaults.py:350
msgid "Name of the jQuery file found in mezzanine/core/static/mezzanine/js/"
msgstr ""

#: defaults.py:358
msgid "Max paging links"
msgstr "Максимальное количество ссылок в пагинаторе"

#: defaults.py:359
msgid "Max number of paging links to display when paginating."
msgstr ""
"Максимальное количество ссылок на страницы, отображаемых в области пагинации."

#: defaults.py:366
msgid ""
"If ``True``, the pages menu will show all levels of navigation, otherwise "
"child pages are only shown when viewing the parent page."
msgstr ""
"Если ``Да``, то административное меню отображает как приложения, так и "
"модели, в другом случае в меню отображаются только приложения"

#: defaults.py:375
msgid "Min value for a rating."
msgstr "Минимальное значение для голосования"

#: defaults.py:382
msgid "Max value for a rating."
msgstr "Максимальное значение для голосования"

#: defaults.py:389
msgid ""
"Dotted package path and class name of the widget to use for the "
"``RichTextField``."
msgstr ""
"Разделённый точками путь к пакету и имя класса виджета, используемый для "
"отображения виджета ``RichTextField``."

#: defaults.py:397
msgid ""
"List of HTML tags that won't be stripped from ``RichTextField`` instances."
msgstr ""

#: defaults.py:413
msgid ""
"List of HTML attributes that won't be stripped from ``RichTextField`` "
"instances."
msgstr ""

#: defaults.py:431
msgid ""
"Dotted path to the function to call on a ``RichTextField`` value before it "
"is rendered to the template."
msgstr ""
"Разделённый точками путь до функции, преобразующей значение "
"``RichTextField``, при отображении в шаблоне"

#: defaults.py:441
msgid "High"
msgstr "Высокий"

#: defaults.py:442
msgid "Low (allows video, iframe, Flash, etc)"
msgstr "Низкий (разрешает теги video, iframe, Flash, и др.)"

#: defaults.py:443
msgid "No filtering"
msgstr "Без фильтра"

#: defaults.py:448
msgid "Rich Text filter level"
msgstr "Уровень фильтрации Rich Text содержимого"

#: defaults.py:449
msgid ""
"*Do not change this setting unless you know what you're doing.*\n"
"\n"
"When content is saved in a Rich Text (WYSIWYG) field, unsafe HTML tags and "
"attributes are stripped from the content to protect against staff members "
"intentionally adding code that could be used to cause problems, such as "
"changing their account to a super-user with full access to the system.\n"
"\n"
"This setting allows you to change the level of filtering that occurs. "
"Setting it to low will allow certain extra tags to be permitted, such as "
"those required for embedding video. While these tags are not the main "
"candidates for users adding malicious code, they are still considered "
"dangerous and could potentially be mis-used by a particularly technical "
"user, and so are filtered out when the filtering level is set to high.\n"
"\n"
"Setting the filtering level to no filtering, will disable all filtering, and "
"allow any code to be entered by staff members, including script tags."
msgstr ""
"*Не изменяйте этот параметр, если вы не знаете что он делает.*\n"
"\n"
"Когда содержимое Rich Text (WYSIWYG) поля сохраняется в базу, небезопасные "
"HTML теги и атрибуты исключаются из текста для защиты от намеренного "
"добавления редакторами сайта кода, который может привести к смене типа их "
"учетной записи на супер-пользователя с полным доступом к системе.\n"
"\n"
"Этот параметр позволяет изменить уровень фильтрации HTML тегов. Установка "
"параметра в ``Низкий`` разрешает добавлять некоторые дополнительные теги, "
"которые требуются для вставки видео. Хотя они и не являются опасными, все же "
"могут быть косвенно использованы технически грамотными пользователями. "
"Поэтому даже эти теги фильтруются, если выставлен ``Высокий`` уровень "
"фильтрации.\n"
"\n"
"Установка параметра в состояние ``Без фильтра`` отключает фильтрацию, что "
"позволяет редакторам сайт добавлять любой HTML код, включая скриптовые теги."

#: defaults.py:472
msgid "Search results per page"
msgstr "Количество результатов поиска на страницу"

#: defaults.py:473
msgid "Number of results shown in the search results page."
msgstr "Количество результатов показываемых на странице поиска"

#: defaults.py:480
msgid "Site Title"
msgstr "Заголовок сайта"

#: defaults.py:481
msgid ""
"Title that will display at the top of the site, and be appended to the "
"content of the HTML title tags on every page."
msgstr ""
"Заголовок, отображаемый как название вкладки браузера (или название окна "
"браузера), состоит из заголовка отображаемой страницы с добавлением данной "
"части"

#: defaults.py:489
msgid "Tagline"
msgstr "Подзаголовок"

#: defaults.py:490
msgid "A tag line that will appear at the top of all pages."
msgstr "Подзаголовок, отображаемый на всех страницах сайта"

#: defaults.py:492
msgid "An open source content management platform."
msgstr ""

#: defaults.py:497
msgid ""
"Dotted Python path to the callable for converting strings into URL slugs. "
"Defaults to ``mezzanine.utils.urls.slugify_unicode`` which allows for non-"
"ascii URLS. Change to ``django.template.defaultfilters.slugify`` to use "
"Django's slugify function, or something of your own if required."
msgstr ""

#: defaults.py:508
msgid "Enable SSL"
msgstr "Включить SSL"

#: defaults.py:509
msgid ""
"If ``True``, users will be automatically redirected to HTTPS for the URLs "
"specified by the ``SSL_FORCE_URL_PREFIXES`` setting."
msgstr ""
"Если ``Да``, то пользователи будут автоматически перенаправлены на HTTPS для "
"ссылок, которые указаны в настройке ``SSL_FORCE_URL_PREFIXES``."

#: defaults.py:518
msgid "Force Host"
msgstr "Установить хост"

#: defaults.py:519
msgid ""
"Host name that the site should always be accessed via that matches the SSL "
"certificate."
msgstr "Имя хоста, которое сайт будет использовать для SSL-сертификата"

#: defaults.py:537
msgid "List of words which will be stripped from search queries."
msgstr "Список слов, исключаемых из поисковых запросов"

#: defaults.py:594
msgid "Tag Cloud Sizes"
msgstr "Размеры облака тэгов"

#: defaults.py:595
msgid "Number of different sizes for tags when shown as a cloud."
msgstr ""
"Количество разнообразных размеров надписей, отображаемых в облаке тэгов"

#: defaults.py:602
msgid "Sequence of setting names available within templates."
msgstr "Список настроек, переопределяемых пользователем"

#: defaults.py:617
msgid ""
"Directory name to store thumbnails in, that will be created relative to the "
"original image's directory."
msgstr ""

#: defaults.py:625
msgid ""
"URL for the JavaScript file (relative to ``STATIC_URL``) that handles "
"configuring TinyMCE when the default ``RICHTEXT_WIDGET_CLASS`` is used."
msgstr ""

#: defaults.py:640
msgid ""
"If ``True``, the south application will be automatically added to the "
"``INSTALLED_APPS`` setting."
msgstr ""
"Если ``Да``, то South будет автоматически добавлен в список приложений "
"(INSTALLED_APPS)"

#: forms.py:52
msgid "Miscellaneous"
msgstr "Прочее"

#: models.py:17
msgid "Setting"
msgstr "Настройка"

#: models.py:18
msgid "Settings"
msgstr "Настройки"

#: templates/admin/conf/setting/change_list.html:8
msgid "Please correct the errors below."
msgstr "Пожалуста, исправьте следующие ошибки"

#: templates/admin/conf/setting/change_list.html:31
msgid "Save"
msgstr "Сохранить"
